<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="  
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 加载redis配置文件 -->
	<context:property-placeholder
		location="classpath:com/stone/base/config/redis.properties"
		ignore-unresolvable="true" />

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxTotal" value="${redis.maxTotal}" />
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
		<property name="testOnReturn" value="${redis.testOnReturn}" />
		<property name="testWhileIdle" value="${redis.testWhileIdle}" />

	</bean>

	<bean id="connectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.ip}" />
		<property name="port" value="${redis.port}" />
		<property name="password" value="${redis.password}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
	</bean>
	

	<!-- <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"> -->
	<!-- <property name="connectionFactory" ref="connectionFactory" /> -->
	<!-- 如果不配置Serializer，那么存储的时候智能使用String，如果用User类型存储，那么会提示错误User can't cast 
		to String！！！ -->
	<!-- <property name="keySerializer"> -->
	<!-- <bean -->
	<!-- class="org.springframework.data.redis.serializer.StringRedisSerializer" 
		/> -->
	<!-- </property> -->
	<!-- <property name="valueSerializer"> -->
	<!-- <bean -->
	<!-- class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" 
		/> -->
	<!-- </property> -->
	<!-- </bean> -->

</beans>