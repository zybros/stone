<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.stone.order.mapper.TOrderCommentMapper" >
  <cache type="org.mybatis.caches.ehcache.EhcacheCache" />
  <resultMap id="BaseResultMap" type="com.stone.order.model.TOrderComment" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="ORDER_ID" property="orderId" jdbcType="INTEGER" />
    <result column="PRODUCT_ID" property="productId" jdbcType="INTEGER" />
    <result column="PRODUCT" property="product" jdbcType="VARCHAR" />
    <result column="SERVICE" property="service" jdbcType="VARCHAR" />
    <result column="IMGS" property="imgs" jdbcType="VARCHAR" />
    <result column="PRODUCT_STAR" property="productStar" jdbcType="INTEGER" />
    <result column="SERVICE_STAR" property="serviceStar" jdbcType="INTEGER" />
    <result column="EXPRESS_STAR" property="expressStar" jdbcType="INTEGER" />
    <result column="STAR" property="star" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, ORDER_ID, PRODUCT_ID, PRODUCT, SERVICE, IMGS, PRODUCT_STAR, SERVICE_STAR, EXPRESS_STAR, 
    STAR
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_order_comment
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" flushCache="true" >
    delete from t_order_comment
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.stone.order.model.TOrderComment" flushCache="true" >
    insert into t_order_comment (ID, ORDER_ID, PRODUCT_ID, 
      PRODUCT, SERVICE, IMGS, 
      PRODUCT_STAR, SERVICE_STAR, EXPRESS_STAR, 
      STAR)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, 
      #{product,jdbcType=VARCHAR}, #{service,jdbcType=VARCHAR}, #{imgs,jdbcType=VARCHAR}, 
      #{productStar,jdbcType=INTEGER}, #{serviceStar,jdbcType=INTEGER}, #{expressStar,jdbcType=INTEGER}, 
      #{star,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.stone.order.model.TOrderComment" flushCache="true" >
    insert into t_order_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      ID,
      ORDER_ID,
      PRODUCT_ID,
      PRODUCT,
      SERVICE,
      IMGS,
      PRODUCT_STAR,
      SERVICE_STAR,
      EXPRESS_STAR,
      STAR,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=INTEGER},
      #{orderId,jdbcType=INTEGER},
      #{productId,jdbcType=INTEGER},
      #{product,jdbcType=VARCHAR},
      #{service,jdbcType=VARCHAR},
      #{imgs,jdbcType=VARCHAR},
      #{productStar,jdbcType=INTEGER},
      #{serviceStar,jdbcType=INTEGER},
      #{expressStar,jdbcType=INTEGER},
      #{star,jdbcType=INTEGER},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.stone.order.model.TOrderComment" flushCache="true" >
    update t_order_comment
    <set >
      <if test="orderId != null" >
        ORDER_ID = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        PRODUCT_ID = #{productId,jdbcType=INTEGER},
      </if>
      <if test="product != null" >
        PRODUCT = #{product,jdbcType=VARCHAR},
      </if>
      <if test="service != null" >
        SERVICE = #{service,jdbcType=VARCHAR},
      </if>
      <if test="imgs != null" >
        IMGS = #{imgs,jdbcType=VARCHAR},
      </if>
      <if test="productStar != null" >
        PRODUCT_STAR = #{productStar,jdbcType=INTEGER},
      </if>
      <if test="serviceStar != null" >
        SERVICE_STAR = #{serviceStar,jdbcType=INTEGER},
      </if>
      <if test="expressStar != null" >
        EXPRESS_STAR = #{expressStar,jdbcType=INTEGER},
      </if>
      <if test="star != null" >
        STAR = #{star,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stone.order.model.TOrderComment" flushCache="true" >
    update t_order_comment
    set ORDER_ID = #{orderId,jdbcType=INTEGER},
      PRODUCT_ID = #{productId,jdbcType=INTEGER},
      PRODUCT = #{product,jdbcType=VARCHAR},
      SERVICE = #{service,jdbcType=VARCHAR},
      IMGS = #{imgs,jdbcType=VARCHAR},
      PRODUCT_STAR = #{productStar,jdbcType=INTEGER},
      SERVICE_STAR = #{serviceStar,jdbcType=INTEGER},
      EXPRESS_STAR = #{expressStar,jdbcType=INTEGER},
      STAR = #{star,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>