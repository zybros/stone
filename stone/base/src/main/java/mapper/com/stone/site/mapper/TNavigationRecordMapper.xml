<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.stone.site.mapper.TNavigationRecordMapper">
	<resultMap id="BaseResultMap" type="com.stone.site.model.TNavigationRecord">
		<id column="RECORD_ID" property="recordId" jdbcType="INTEGER" />
		<result column="PARENT_ID" property="parentId" jdbcType="INTEGER" />
		<result column="TYPE" property="type" jdbcType="INTEGER" />
		<result column="ORDER" property="order" jdbcType="INTEGER" />
		<result column="STATUS" property="status" jdbcType="INTEGER" />
		<collection property="fieldList"
			ofType="com.stone.site.model.TNavigationField" column="RECORD_ID"
			select="com.stone.site.mapper.TNavigationFieldMapper.selectByRecordId" />
	</resultMap>
	<sql id="Base_Column_List">
		RECORD_ID, PARENT_ID, `TYPE`, `ORDER`, `STATUS`
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_navigation_record
		where RECORD_ID = #{recordId,jdbcType=INTEGER}
	</select>

	<select id="selectList" resultMap="BaseResultMap" parameterType="com.stone.site.model.TNavigationRecord">
		select
		<include refid="Base_Column_List" />
		from t_navigation_record
		<where>
			<if test="type != null and type != '' or type==0">
				AND TYPE = #{type}
			</if>
			<if test="parentId != null and parentId != ''  or parentId==0">
				AND PARENT_ID = #{parentId}
			</if>
			<if test="status != null and status != '' ">
				AND STATUS = #{status}
			</if>
		</where>
	</select>



	<select id="selectListByParentId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_navigation_record
		where
		PARENT_ID = #{parentId}
	</select>
	
	<select id="selectListByType" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_navigation_record
		where
		TYPE = #{type}
	</select>


	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_navigation_record
		where RECORD_ID = #{recordId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.stone.site.model.TNavigationRecord"
		useGeneratedKeys="true" keyProperty="recordId">
		insert into t_navigation_record (PARENT_ID, `TYPE`, `ORDER`,
		`STATUS`)
		values (#{parentId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER},
		#{order,jdbcType=INTEGER},
		#{status,jdbcType=INTEGER})
		 <selectKey resultType="int" keyProperty="recordId" order="AFTER">
           SELECT LAST_INSERT_ID() as ID;
       </selectKey> 
	</insert>
	<insert id="insertSelective" parameterType="com.stone.site.model.TNavigationRecord"
		useGeneratedKeys="true" keyProperty="recordId">
		insert into t_navigation_record
		<trim prefix="(" suffix=")" suffixOverrides=",">
			PARENT_ID,
			`TYPE`,
			`ORDER`,
			`STATUS`,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{parentId,jdbcType=INTEGER},
			#{type,jdbcType=INTEGER},
			#{order,jdbcType=INTEGER},
			#{status,jdbcType=INTEGER},
		</trim>
	</insert>

	<insert id="insertList" parameterType="java.util.List">
		insert into t_navigation_record (PARENT_ID, `TYPE`, `ORDER`,
		`STATUS`)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{parentId}, #{type}, #{order},
			#{status})
		</foreach>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.stone.site.model.TNavigationRecord">
		update t_navigation_record
		<set>
			<if test="parentId != null">
				PARENT_ID = #{parentId,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				`TYPE` = #{type,jdbcType=INTEGER},
			</if>
			<if test="order != null">
				`ORDER` = #{order,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				`STATUS` = #{status,jdbcType=INTEGER},
			</if>
		</set>
		where RECORD_ID = #{recordId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.stone.site.model.TNavigationRecord">
		update t_navigation_record
		set 
		`TYPE` = #{type,jdbcType=INTEGER},
		`ORDER` = #{order,jdbcType=INTEGER},
		`STATUS` = #{status,jdbcType=INTEGER}
		where RECORD_ID = #{recordId,jdbcType=INTEGER}
	</update>
	
	
	
	
	<resultMap id="recordMap" type="com.stone.site.model.TNavigationRecord">
		<id column="RECORD_ID" property="recordId" jdbcType="INTEGER" />
		<result column="PARENT_ID" property="parentId" jdbcType="INTEGER" />
		<result column="TYPE" property="type" jdbcType="INTEGER" />
		<result column="ORDER" property="order" jdbcType="INTEGER" />
		<result column="STATUS" property="status" jdbcType="INTEGER" />
		<collection property="fieldList"
			ofType="com.stone.site.model.TNavigationField" column="RECORD_ID"
			select="com.stone.site.mapper.TNavigationFieldMapper.selectByRecordId" />
		<collection property="sublist" column="RECORD_ID" select="selectSubTree" />  
	</resultMap>
	
	
	<select id="selectAsTree" parameterType="com.stone.site.model.TNavigationRecord" resultMap="recordMap" >
		select
		<include refid="Base_Column_List" />
		from t_navigation_record
		<where>
			<if test="type != null and type != '' or type==0">
				AND TYPE = #{type}
			</if>
			<if test="parentId != null and parentId != ''  or parentId==0">
				AND PARENT_ID = #{parentId}
			</if>
			<if test="status != null and status != '' ">
				AND STATUS = #{status}
			</if>
		</where>
		ORDER BY `ORDER`
	</select>
	
	<select id="selectSubTree" parameterType="java.lang.Integer" resultMap="recordMap">
		select
		<include refid="Base_Column_List" />
		from t_navigation_record
		where
		parent_id = #{RECORD_ID}
	</select>

	
	
	
	
	
	
</mapper>